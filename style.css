:root {
    --termRadius: 5px;
    --origin-x: 120px;
    --origin-y: 330px;
}

.component {
    --term-left: calc(-21px - var(--termRadius));
    --term-right: calc(-21px - var(--termRadius));
    --term-top: calc(-21px - var(--termRadius));
    --term-bottom: calc(-21px - var(--termRadius));
    /* --term-v: 50%; 左右端子の縦位置 */
    /* --term-h: 50%; 上下端子の横位置 */
}

.workspace {
    display: grid;
    grid-template-columns: 220px 1fr;
    gap: 16px;
    max-width: 1200px;
    margin: 0 auto 16px;
    padding: 0 12px;
}

#sidebar {
    position: sticky;
}

.toolgroup {
    display: grid;
    /* grid-template-rows: 45px 45px; */
    grid-template-columns: repeat(2, 1fr);
    gap: 5px;
}

button.tool {
    display: grid;
    place-items: center;
    width: 100%;
    height: 50px;
    border: 1px solid #bbb;
    border-radius: 10px;
    background: #fff;
    cursor: pointer;
}

button.tool.is-active {
    border-color: #59f;
    box-shadow: 0 0 3px 3px #4a90e226 inset;
    background: linear-gradient(#f8fbff, #f2f7ff);
}

button.tool img {
    transform: translateY(-50%) translateY(1px);
}

.iconSpace {
    width: 80px;
    height: 0;
    margin: auto;
}

.icon {
    cursor: pointer !important;
    position: static !important;
    margin: auto;
    transform: translateY(-50%) !important;
}

.outputWrap {
    display: flex;
    justify-content: center;
    margin: 12px 0 24px;
}

.outputWrap #output {
    width: min(100%, 700px);
    resize: none;
}

#canvasWrap {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
}

#canvas {
    border: 1px solid #999;
    width: 100%;
    height: 100%;
    max-width: 1200px;
    max-height: 800px;
    min-height: 400px;
    position: relative;
    background-image:
        linear-gradient(to right, #ddd 1px, transparent 1px, transparent 19px, #ddd 1px),
        linear-gradient(to bottom, #ddd 1px, transparent 1px, transparent 9px, #eee 10px, #eee 11px, transparent 1px, transparent 19px, #ddd 1px),
        linear-gradient(to right, transparent 9px, #eee 10px, #eee 11px, transparent 1px);
    background-size: 20px 20px;
}

#canvas.placing-active {
    cursor: crosshair;
}

.component-preview {
    opacity: .65;
    pointer-events: none;
    outline: 1px dashed #999;
}

.component-preview .terminal {
    display: none !important;
}

#zero {
    width: 100%;
    height: 100%;
    position: absolute;
    background-image:
        linear-gradient(to right, transparent 1px, transparent calc(var(--origin-x) - 1px), #999 var(--origin-x), #999 calc(var(--origin-x) + 1px), transparent 1px),
        linear-gradient(to bottom, transparent 1px, transparent calc(var(--origin-y) - 1px), #999 var(--origin-y), #999 calc(var(--origin-y) + 1px), transparent 1px);
}

#wireLayer {
    width: 100%;
    height: 100%;
    position: absolute;
    pointer-events: none;
}

.wire {
    pointer-events: none;
}

.wire-hit {
    fill: none;
    stroke: black;
    stroke-opacity: 0.001;
    stroke-width: 12;
    pointer-events: stroke;
}

#handleLayer {
    position: absolute;
    inset: 0;
    pointer-events: none;
}

.resistor,
.vsource,
.ground,
.ground-img {
    touch-action: none;
}

body.no-select,
body.no-select *,
#canvas,
#canvas *,
#wireLayer,
#handleLayer {
    -webkit-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

.resistor {
    width: 38px;
    height: 18px;
    background-color: #FFF;
    border: 1px solid #000;
    position: absolute;
    text-align: center;
    cursor: move;
    transform: translateX(-50%) translateY(-50%);
}

.resistor::before,
.resistor::after {
    content: "";
    width: 20px;
    height: 2px;
    top: 8px;
    background-color: black;
    position: absolute;
}

.resistor::before {
    left: -20px;
}

.resistor::after {
    right: -20px;
}

.resistor.o90,
.resistor.o270 {
    width: 18px;
    height: 38px;
}

.resistor.o90::before,
.resistor.o270::after {
    width: 2px;
    height: 20px;
    top: -20px;
    bottom: auto;
    left: 8px;
}

.resistor.o90::after,
.resistor.o270::before {
    width: 2px;
    height: 20px;
    top: auto;
    bottom: -20px;
    left: 8px;
}

.vsource {
    width: 38px;
    height: 38px;
    background-color: #fff;
    border: 1px solid #000;
    border-radius: 50%;
    position: absolute;
    cursor: move;
    transform: translateX(-50%) translateY(-50%);
}

.vsource::before,
.vsource::after {
    content: "";
    position: absolute;
    width: 20px;
    height: 2px;
    top: calc(50% - 1px);
    background: #000;
}

.vsource::before {
    left: -20px;
}

.vsource::after {
    right: -20px;
}

.vsource.o90::before,
.vsource.o270::after {
    width: 2px;
    height: 20px;
    top: -20px;
    bottom: auto;
    left: calc(50% - 1px);
}

.vsource.o90::after,
.vsource.o270::before {
    width: 2px;
    height: 20px;
    top: auto;
    bottom: -20px;
    left: calc(50% - 1px);
}

.inductor-img {
    position: absolute;
    width: 80px;
    height: 20px;
    cursor: move;
    transform: translate(-50%, -50%);
}
.inductor-img img {
    width: 100%;
    height: 100%;
    display: block;
    pointer-events: none;
}

.inductor-img.o90 img {
    transform: rotate(90deg);
    transform-origin: center;
}

.inductor-img.o180 img {
    transform: rotate(180deg);
    transform-origin: center;
}

.inductor-img.o270 img {
    transform: rotate(270deg);
    transform-origin: center;
}


.ground-img {
    position: absolute;
    width: 20px;
    height: 20px;
    cursor: move;
    transform: translateX(-50%) translateY(-50%);
}

.ground-img img {
    width: 100%;
    height: 100%;
    display: block;
    pointer-events: none;
}

.ground-img.o90 img {
    transform: rotate(90deg);
    transform-origin: center;
}

.ground-img.o180 img {
    transform: rotate(180deg);
    transform-origin: center;
}

.ground-img.o270 img {
    transform: rotate(270deg);
    transform-origin: center;
}

.terminal {
    width: calc(var(--termRadius) * 2);
    height: calc(var(--termRadius) * 2);
    z-index: 1;
    background-color: red;
    position: absolute;
    border-radius: 50%;
    cursor: pointer;
    display: none;
    pointer-events: auto;
}

#canvas.wiring-active .terminal,
.selected .terminal {
    display: block;
}

.component {
    --term-left: calc(-21px - var(--termRadius));
    --term-right: calc(-21px - var(--termRadius));
    --term-top: calc(-21px - var(--termRadius));
    --term-bottom: calc(-21px - var(--termRadius));
    /* --term-v: 50%; 左右端子の縦位置 */
    /* --term-h: 50%; 上下端子の横位置 */
}

.resistor {
    --term-left: calc(-21px - var(--termRadius));
    --term-right: calc(-21px - var(--termRadius));
    --term-top: calc(-21px - var(--termRadius));
    --term-bottom: calc(-21px - var(--termRadius));
}
.inductor {
    --term-left: calc(-21px - var(--termRadius));
    --term-right: calc(-21px - var(--termRadius));
    --term-top: calc(-21px - var(--termRadius));
    --term-bottom: calc(-21px - var(--termRadius));
}
.vsource {
    --term-left: calc(-21px - var(--termRadius));
    --term-right: calc(-21px - var(--termRadius));
    --term-top: calc(-21px - var(--termRadius));
    --term-bottom: calc(-21px - var(--termRadius));
}

.ground-img {
    --term-left: calc(-1 * var(--termRadius));
    --term-right: calc(-1 * var(--termRadius));
    --term-top: calc(-1 * var(--termRadius));
    --term-bottom: calc(-1 * var(--termRadius));
}

.terminal[data-side="left"] {
    left: var(--term-left);
    right: auto;
    top: 50%;
    transform: translateY(-50%);
}

.terminal[data-side="right"] {
    right: var(--term-right);
    left: auto;
    top: 50%;
    transform: translateY(-50%);
}

.terminal[data-side="top"] {
    top: var(--term-top);
    bottom: auto;
    left: 50%;
    transform: translateX(-50%);
}

.terminal[data-side="bottom"] {
    bottom: var(--term-bottom);
    top: auto;
    left: 50%;
    transform: translateX(-50%);
}

.handle-waypoint {
    position: absolute;
    width: calc(var(--termRadius) * 2);
    height: calc(var(--termRadius) * 2);
    border-radius: 50%;
    background-color: red;
    transform: translate(-50%, -50%);
    pointer-events: auto;
    box-shadow: 0 0 0 1px #fff;
}

.handle-waypoint.selected {
    outline: 2px solid #59f;
}